import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

plugins {
    id 'com.bmuschko.docker-remote-api' version '5.3.0'
}

def dockerBuildDir = file("${project.buildDir}/docker")

task clean(type: Delete) {
    group "build"
    delete "${project.buildDir}"
}

task copyJars(type: Copy) {
    dependsOn project(":core").tasks.withType(Jar)
    group "build"
    from project(":core").tasks.withType(Jar)
    from project(":core").configurations.runtimeClasspath
    into dockerBuildDir
}

task copyDockerSources(type: Copy) {
    group "build"
    from file("src/main/docker")
    into dockerBuildDir
}

task buildAppImage(type: DockerBuildImage) {
    group "build"
    dependsOn copyJars, copyDockerSources
    inputDir = dockerBuildDir
    tags.addAll(['dajudge/kafkaproxy:devel'])
}

task pushAppImage(type: DockerPushImage) {
    group "publish"
    dependsOn buildAppImage
    imageName = "dajudge/kafkaproxy:devel"
    registryCredentials.username = System.getenv("DOCKERHUB_USERNAME")
    registryCredentials.password = System.getenv("DOCKERHUB_PASSWORD")
}

task build {
    group "build"
    dependsOn buildAppImage
}

task publish {
    group "publish"
    dependsOn build
}

if (System.getenv("CI_COMMIT_REF_NAME").equals("master")) {
    println "Publishing branch '${System.getenv("CI_COMMIT_REF_NAME")}'..."
    publish.dependsOn pushAppImage
} else {
    println "Not plublishing branch '${System.getenv("CI_COMMIT_REF_NAME")}'"
}